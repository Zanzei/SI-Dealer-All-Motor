/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.kategoriDAO;
import Controller.stokDAO;
import Model.Kategorimotor;
import Model.Stokdigudang;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANDRE
 */
public class kategoriMotor extends javax.swing.JPanel implements ListSelectionListener {

    /**
     * Creates new form kategoriMotor
     */
    private kategoriDAO daoKategori;
    private stokDAO daoStok;

    private DefaultTableModel dtmKategori;
    private DefaultTableModel dtmDetail;
    private List<Kategorimotor> listKategori;
    private List<Stokdigudang> listStok;
    private int row;

    public kategoriMotor() {
        initComponents();
        daoKategori = new kategoriDAO();
        daoStok = new stokDAO();
        dtmKategori = (DefaultTableModel) tableKategori.getModel();
        dtmDetail = (DefaultTableModel) tableDetail.getModel();

        listKategori = daoKategori.getAllKategori();
        listStok = daoStok.getAllStok();
        showAllDataKategori();
        tambahOrUpdate.setVisible(false);

    }

    /*
    ---------
    Start of methods 
     */
    //Untuk menampilkan seluruh data kategori
    private void showAllDataKategori() {
        tableKategori.getSelectionModel().removeListSelectionListener(this);
        listKategori = daoKategori.getAllKategori();
        dtmKategori.getDataVector().removeAllElements();

        for (Kategorimotor s : listKategori) {
            listStok = daoStok.getStokByKategori(s.getIDKategori());
            int total = 0;
            for (int i = 0; i < listStok.size(); i++) {
                total += listStok.get(i).getHarga();
            }

            dtmKategori.addRow(new Object[]{
                s.getIDKategori(),
                s.getNamaKategori(),
                listStok.size(),
                total
            });
        }
        tableKategori.getSelectionModel().addListSelectionListener(this);
    }

    //Untuk menampilkan data produk yang ada dalam kategori
    private void showAllKategoriData() {
        dtmDetail.getDataVector().removeAllElements();
        listStok = daoStok.getStokByKategori(listKategori.get(row).getIDKategori());

        for (Stokdigudang od : listStok) {
            dtmDetail.addRow(new Object[]{
                od.getIDBarang(),
                od.getNamaBarang(),
                od.getStok(),
                od.getBrand(),
                od.getHarga()
            });
        }
    }

    //Untuk menghapus data
    private void deleteData() {
        Kategorimotor s = new Kategorimotor();
        s.setIDKategori(listKategori.get(row).getIDKategori());
        s.setNamaKategori(listKategori.get(row).getNamaKategori());

        try {
            daoKategori.deleteKategori(s);
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
            showAllDataKategori();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data gagal dihapus!");
        }
    }

    //Untuk memasukkan atau mengupdate data
    private void addOrUpdate() {
        try {
            Kategorimotor k = new Kategorimotor();
            if (!tableKategori.getSelectionModel().isSelectionEmpty()) {
                k.setIDKategori(new Integer(tfID.getText()));
            }
            k.setNamaKategori(tfNama.getText());

            daoKategori.addOrUpdateKategori(k);
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
            showAllDataKategori();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data gagal disimpan!");
        }
    }

    /*
    ---------
    End of methods 
     */
    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == tableKategori.getSelectionModel()) {
            row = tableKategori.getSelectedRow();
        }
        tfID.setText(String.valueOf(listKategori.get(row).getIDKategori()));
        tfNama.setText(listKategori.get(row).getNamaKategori());
        showAllKategoriData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKategori = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDetail = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        tambahOrUpdate = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        btnKonfirmasi = new javax.swing.JButton();

        jLabel8.setText("jLabel8");

        setBackground(new java.awt.Color(255, 51, 51));
        setPreferredSize(new java.awt.Dimension(500, 300));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, -1, -1));

        tableKategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Kategori", "Nama Kategori", "Jumlah Produk", "Jumlah Harga Produk"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableKategori);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 363, 250));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Kategori Motor");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 55, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icon_kanan.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 188, -1, -1));

        tableDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Barang", "Nama Barang", "Stok", "Brand", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableDetail);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 335, 250));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 94, -1, -1));

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 80, 40));

        btnSave.setText("Tambah / Update");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 180, 40));

        tambahOrUpdate.setBackground(new java.awt.Color(255, 51, 51));
        tambahOrUpdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Tambah / Update Kategori");
        tambahOrUpdate.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Nama Kategori :");
        tambahOrUpdate.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("ID Kategori :");
        tambahOrUpdate.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));
        tambahOrUpdate.add(tfNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 100, -1));

        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Nama Kategori :");
        tambahOrUpdate.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        tfID.setEnabled(false);
        tambahOrUpdate.add(tfID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 100, -1));

        btnKonfirmasi.setText("Konfirmasi");
        btnKonfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonfirmasiActionPerformed(evt);
            }
        });
        tambahOrUpdate.add(btnKonfirmasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        add(tambahOrUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        deleteData();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        tambahOrUpdate.setVisible(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Home h = new Home();
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnKonfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonfirmasiActionPerformed
        addOrUpdate();
    }//GEN-LAST:event_btnKonfirmasiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKonfirmasi;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableDetail;
    private javax.swing.JTable tableKategori;
    private javax.swing.JPanel tambahOrUpdate;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNama;
    // End of variables declaration//GEN-END:variables

}
